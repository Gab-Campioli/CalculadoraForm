<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>